services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ../.env
    environment:
      - APP_ENV=development
      - REDIS_URL=redis://redis:6379
      - DYNAMODB_ENDPOINT=http://dynamodb-local:8000
      - PROMETHEUS_MULTIPROC_DIR=/app/metrics
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - ../app:/app/app
      - ../infrastructure:/app/infrastructure
      - ../requirements:/app/requirements
    command: >
      sh -c "python /app/infrastructure/scripts/create_dynamodb_tables.py &&
            sleep 3 &&
            python /app/infrastructure/scripts/seed_dynamodb.py &&
            exec gunicorn main:app -k uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    depends_on:
      - redis
      - dynamodb-local
      - prometheus

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  dynamodb-local:
    image: amazon/dynamodb-local:1.16.0
    ports:
      - "8001:8000"
    volumes:
      - dynamodb_data:/home/dynamodblocal

  grafana:
    image: grafana/grafana:8.3.4
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
  load-tester:
    build:
      context: .
      dockerfile: Dockerfile.loadtest
    depends_on:
      - app
    environment:
      - PYTHONUNBUFFERED=1

volumes:
  redis_data:
  dynamodb_data:
  grafana_data:
